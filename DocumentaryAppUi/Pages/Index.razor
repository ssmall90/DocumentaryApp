@page "/"
@inject ITmdbService TmdbService
@inject NavigationManager navManager

<h1 class="page-heading text-uppercase mb-6">Documentary Genie</h1>

@if (movies != null)
{
    <div class="movie-container-index row">
        @foreach (var movie in movies.Results)
        {
            <div class="col-sm suggested-movie-container">
                
                <img class="movie-image" src="@movie.FullPosterPath" />
      
                <h3 class="suggested-movie-title">
                @movie.title
                </h3>

                <div>
                    <button class="show-details-button btn btn-outline-light btn-lg text-uppercase" @onclick="() => OpenDetails(movie)">See Details</button>
                </div>
            </div>
        }
    </div>
    <div class="generate-conatiner">
        <button class="generate-more-button btn btn-outline-light btn-lg text-uppercase" @onclick="GenerateMovies">Generate More Documentaries</button>
    </div>

}
else
{
    <div>
        <div class="generate-conatiner">
            <button class="generate-button btn btn-outline-light btn-lg text-uppercase" @onclick="GenerateMovies">Generate Documentaries</button>
        </div>
    </div>
}

@code {
    MovieResponse movies;

    private async Task GenerateMovies()
    {
        movies = await TmdbService.GetPopularMoviesAsync();
    }

    private void OpenDetails(Movie movie)
    {
        navManager.NavigateTo($"/DocumentaryDetails/{movie.id}");
    }
}